<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAIACoEAAAJgAAABgYAAAAACAAiAkAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa2tqMUVERKoGBgYHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpaGg3aGdn/wkJCUoAAAAYAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABycG/qJycnjQAA
        ABoAAAAdAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHl4
        d49FRUbiAAAAAAAAABIAAAAcAAAADQAAAAAAAAAAAAAAAAAAAAMAAAAHAAAACQAAAAkAAAAMAAAACgAA
        AAgAAAAHAAAABgAAAAcAAAAJAAAACgAAAA0AAAAUAAAAGAAAABgAAAARAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZ2ZmNmVkZP87OzssAAAAAAAAAAcAAAAWAAAAEgAAAAoAAAAcAAAAKQAAAC4AAAAsAAAAKwAA
        ACoAAAAoAAAAJQAAACMAAAAiAAAAIQAAACAAAAAfAAAAHQAAABsAAAAYAAAAFQAAABEAAAAMAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAbm5t7UBAQIMAAAAAAAAAAAAAAAIAAAARAAAAIwAAAC0AAAAuAAAALAAA
        ACoAAAAoAAAAJgAAACQAAAAiAAAAIQAAAB8AAAAeAAAAHAAAABoAAAAXAAAAFQAAABQAAAARAAAADAAA
        AAsAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAB3d3WRRkZF4AAAAAAAAAAAAAAAAAAAAAAAAAALAAAAHwAA
        ACUAAAAkAAAAIgAAACAAAAAdAAAAGwAAABsAAAAaAAAAGQAAABYAAAAWAAAAFQAAABQAAAASAAAADgAA
        AAsAAAAJAAAABwAAAAcAAAAEAAAAAAAAAAAAAAAAAAAAAGdmZjZlZGT/QkJCKAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAEwAAABoAAAAaAAAAFwAAABcAAAAVAAAAEwAAABIAAAAQAAAAEAAAAA8AAAAOAAAADgAA
        AA0AAAAMAAAABQ8eAE8ECQADAAAABAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAG9ubu0/QECDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABAAAAARAAAADQAAAAcAAAAEAAAAAgAAAAEAAAABAAAAAQAA
        AAEAAAACAAAAAgAAAAAUKwBOFS8A1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHd1k0ZG
        ReAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAL1gJMxw/AvoVMAL7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABnZmY6ZWRk/0JCQiUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFuFNmlBayD8H0YF/xUzAv8bPAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABxcG7vPz9AgAAAAAAAAAAAIU4EJSBNBp0gUAbmIlMJ/yZZCv8qXwn7LWML4jBo
        DMUzbQyjNXIMhjh0DHBJgSBgaZZHaoyrcpeLq3PqdqBZ/09+Lf8lUgr/FjsE/xo8AUkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHl4dpRGRkfcAAAAAB1DBGQaRAj/HE8J/x9VC/8iWgz/J2AO/ylk
        D/8uaxD/MHAS/zV2E/84exP/OX0S/0qHJv9yoVb/m7yI/52+iv9/q2T/XJE8/y5hEf8bQwb/GT8CdQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaGhoOmdkZv8sPh5zFjgI/xpFC/8dUgv/IlkL/yVf
        Dv8pZRD/LGsR/zBxEv8ydRL/N3sV/zqDFf88hRb/RYwg/26kUP+XvYL/p8iW/4i0b/9nnkn/OG8a/x5M
        Cf8aQAWhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXlm7h08Df8XOQv/HEkL/x9W
        C/8hXgz/JmMO/yppEP8scRP/MXcT/zV9F/85gxf/PIka/z6NGv9DjyD/Z6VK/5C8ev+qzJv/jrp4/2+n
        VP9DgCX/IlUL/xtDBcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFn2iXK1IQ/xc6
        Df8bSw7/IFkN/yJjDv8nahH/K3AT/y92FP8xfBj/NoIa/zqIHP89jh7/QJIe/0GSIP9go0T/ibp0/6vO
        nP+VwYH/dq9d/1CQMv8nYRD/HEcH+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHiT
        WDxdhD3/GT4M/xxMEP8hWw//JGcR/yhuE/8sdBX/LnoW/zOAGv81hhv/Ooof/z6QIf9BlyP/QJYh/1qj
        P/+CuG3/qM+b/5vHiv99tmf/Wp1A/y5vFv8cTgv/IE4EGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHueV+4cRAr/HEwS/yFcEv8jaRH/KHAT/yx1F/8ufRj/M4Mc/zeJH/85jyD/PZUk/0Kb
        Jv9CmyT/UqQ4/3q4Z/+kzpX/o82U/4S8cP9kqkv/N30e/yBYDv8fTQZGAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AQD+AAMA/ggHAP4//wD/P/8A////AA==
</value>
  </data>
</root>